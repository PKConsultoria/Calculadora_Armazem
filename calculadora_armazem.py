
import streamlit as st
import pandas as pd

st.set_page_config(page_title="Calculadora Armaz√©m", page_icon="üè≠", layout="centered")

st.title("üè≠Calculadora de Receitas e Custos - Armaz√©m")

# ===============================
# Informa√ß√µes b√°sicas
# ===============================
st.header("‚ÑπÔ∏è Informa√ß√µes B√°sicas")

col1, col2, col3 = st.columns(3)
with col1:
    armazem = st.selectbox("Armaz√©m", ["Espinheiros", "Garuva"])
with col2:
    cliente = st.text_input("Cliente")
with col3:
    vendedor = st.text_input("Vendedor")

# ===============================
# Detalhes da opera√ß√£o
# ===============================
st.header("üèóÔ∏è Detalhes da Opera√ß√£o")

tipo_carga = st.selectbox("Tipo de Carga", ["Batida", "Palletizada"])
qtd_containers = st.number_input("Quantidade de Containers", min_value=0, step=1)
peso_por_container = st.number_input("Peso (toneladas) de 1 Container", min_value=0.0, step=0.1, format="%.2f")
qtd_caixas = st.number_input("Quantidade de Itens por Container", min_value=1, step=1)

# ===============================
# M√©tricas Adotadas
# ===============================
st.header("üìä M√©tricas Adotadas")

dias_trabalhados = st.number_input("Dias Trabalhados", min_value=0, value=22, step=1)
horas_trabalhadas_dia = st.number_input("Horas Trabalhadas por Dia", min_value=0.0, value=8.8, step=0.1, format="%.2f")
eficiencia = st.number_input("Efici√™ncia (%)", min_value=0, max_value=100, value=75, step=1)

# ===============================
# Servi√ßos
# ===============================
st.header("üõ†Ô∏è Servi√ßos")

tempos_execucao = {"Batida": 120, "Palletizada": 30}
tempo_exec = tempos_execucao[tipo_carga]
st.info(f"‚è±Ô∏è Tempo estimado de execu√ß√£o por opera√ß√£o: **{tempo_exec} minutos**")

servicos = {
    "Recebimento": {
        "Batida": ["Descarga Batida", "Etiquetagem Batida", "TFA"],
        "Palletizada": ["Descarga Palletizada", "Etiquetagem Palletizada", "TFA"]
    },
    "Expedi√ß√£o": {
        "Batida": ["Separa√ß√£o Batida", "Carregamento Batido", "Etiquetagem Batida"],
        "Palletizada": ["Separa√ß√£o Palletizada", "Carregamento Palletizado", "Etiquetagem Palletizada"]
    },
    "Armazenagem": ["Di√°ria", "Pico Quinzenal", "Pico Mensal"]
}

valores_servicos = {
    "Descarga Batida": 100.0,
    "Descarga Palletizada": 80.0,
    "Etiquetagem Batida": 0.50,
    "Etiquetagem Palletizada": 0.30,
    "TFA": 200.0,
    "Separa√ß√£o Batida": 1.20,
    "Separa√ß√£o Palletizada": 5.0,
    "Carregamento Batido": 90.0,
    "Carregamento Palletizado": 70.0,
    "Di√°ria": 2.0,
    "Pico Quinzenal": 500.0,
    "Pico Mensal": 900.0
}

st.subheader("Selecione os servi√ßos contratados:")

servicos_selecionados = []
custo_servicos = 0.0
discriminacao = []

# -----------------------------
# Recebimento
# -----------------------------
with st.expander("üì• Recebimento"):
    for nome in servicos["Recebimento"][tipo_carga]:
        if st.checkbox(nome, key=f"rec_{nome}"):
            servicos_selecionados.append(nome)
            # Aqui voc√™ pode incluir l√≥gica detalhada por servi√ßo

# -----------------------------
# Mostrar discrimina√ß√£o
# -----------------------------
if discriminacao:
    st.subheader("üìã Discrimina√ß√£o de Custos - Recebimento")
    df_discriminacao = pd.DataFrame(discriminacao)
    df_discriminacao.index += 1
    st.dataframe(df_discriminacao.style.format({"Custo (R$)": "R$ {:,.2f}"}))

# -----------------------------
# Expedi√ß√£o
# -----------------------------
with st.expander("üì¶ Expedi√ß√£o"):
    for nome in servicos["Expedi√ß√£o"][tipo_carga]:
        if st.checkbox(nome, key=f"exp_{nome}"):
            servicos_selecionados.append(nome)
            if "Separa√ß√£o" in nome or "Etiquetagem" in nome:
                custo_servicos += valores_servicos[nome] * qtd_caixas * qtd_containers
            elif "Carregamento" in nome:
                custo_servicos += valores_servicos[nome] * qtd_containers

# -----------------------------
# Armazenagem (sempre aparece)
# -----------------------------
with st.expander("üè¢ Armazenagem"):
    for nome in servicos["Armazenagem"]:
        if st.checkbox(nome, key=f"arm_{nome}"):
            servicos_selecionados.append(nome)
            if nome == "Di√°ria":
                dias = st.number_input("Dias de armazenagem", min_value=1, step=1, value=1)
                custo_servicos += valores_servicos[nome] * qtd_caixas * qtd_containers * dias
            else:
                custo_servicos += valores_servicos[nome]

# -----------------------------
# Custo total
# -----------------------------
st.metric("üí∞ Custo Total Servi√ßos", f"R$ {custo_servicos:,.2f}")
